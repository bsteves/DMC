Module 8: Flow Control 
====================
author: Brian Steves
date: 
autosize: true

ESM 505/ESR 605 : Data Management, Spring 2014


Flow Control
========================
* Conditional Expressions (If, Else)
* Loops (For, While, Repeat)
* Break and Next




if()
==========================

```{r}
x <- sample(10,1)
print(x)
x<- sample(10,1)
print(x)
guess <- 5
```

***

```{r}
if (guess == x) {
  print("Yes!")
}

if (guess > x) {
  print("too high!")
}

if (guess < x) {
  print("too low!")
}
```

else 
============================

```{r}
coin <- c("Heads","Tails")
guess <- "Tails"
print(paste("You called", guess))

x <- sample(2,1)
print(paste("The flip is", coin[x]))
```

***

```{r}

if(guess == coin[x]){
  print("You win!")
  } else {
    print("You loose!")
  }
```


Ifelse()
==============================
The Ifelse() function is a shortcut to an if else statement.  It takes the following form.. ifelse(test, yes, no)

```{r}
coin <- c("Heads","Tails")
guess <- "Tails"
print(paste("You called", guess))
```
***
```{r}
x <- sample(2,1) #random number 1 to 2
print(paste("The flip is", coin[x]))
ifelse(guess == coin[x], "You win!", "You loose!")
```

For Loop
=============================
If you need to run a chunk of code a specific number of times you will want to use a `for` loop.  Think.. "For every value in the sequence do the following"

```{r}
num_of_loops <- 4
for (i in 1:num_of_loops){
  print(paste("loop number",i))
}
```

Looping through a dataset
================================

You might want a loop for each row of data in your data frame.  The nrow() function returns the number of rows in a data frame.

```{r}
dat<-read.csv("data/wk1sites.csv")
for (i in 1:nrow(dat)){
  print(paste("Latitude:",dat$lat[i], ", Longitude:", dat$lon[i]))
}
```


While
====================================
Think... "While the this condition is still true, do the following."

```{r}
x<-0
while (x < 3) {
  x <- rnorm(1)*5
  print(x)
}
```

Repeat
=============================
A repeat loop is very similar to a while loop. A while loop won't even start if the conditional starts out as false, but a repeat loop will run once first and then check the conditional. You also have to specify when to stop using "break".

```{r}
repeat {
  x<-rnorm(1)*5
  print(x)
  if (x > 2) break
}
```


Break and Next
========================
The break statement is used to stop a loop.  The Next statement is used to skip the current loop.  

```{r}

num_of_loops <- 15
for (i in 1:num_of_loops){
  if (i == 3) next
  if (i > 5) break
  print(paste("loop number",i))
}
```



Homework
=================================
Using your data, provide an R script that loads your data and performs at least one loop and and at least one if statement on the data.  Load the R script to the d2l dropbox for this module.



